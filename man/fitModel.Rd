% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitModel.R
\name{fitModel}
\alias{fitModel}
\title{Fit outcome model}
\usage{
fitModel(
  home_dir,
  data,
  weights,
  exposure,
  exposure_time_pts,
  outcome,
  tv_confounders,
  model,
  family = gaussian,
  link = "identity",
  int_order = NA,
  covariates = NULL,
  epochs = NULL,
  verbose = TRUE,
  save.out = TRUE
)
}
\arguments{
\item{home_dir}{path to home directory}

\item{data}{data in wide format as: a data frame, list of imputed
data frames, or mids object}

\item{weights}{list of IPTW weights output from createWeights()}

\item{exposure}{name of exposure variable}

\item{exposure_time_pts}{list of integers at which weights will be
created/assessed that correspond to time points when exposure was measured}

\item{outcome}{name of outcome variable with ".timepoint" suffix}

\item{tv_confounders}{list of time-varying confounders with ".timepoint"
suffix}

\item{model}{character indicating one of the following outcome models:
\itemize{
\item "m0" (exposure main effects)
\item "m1" (exposure main effects & covariates)
\item "m2" (exposure main effects & their interactions)
\item "m3" (exposure main effects, their interactions, & covariates)
}}

\item{family}{(optional) family function specification for svyglm model}

\item{link}{(optional) character link function specification for svyglm model}

\item{int_order}{integer specification of highest order exposure main effects
interaction, required for interaction models ("m2", "m3")}

\item{covariates}{list of characters reflecting variable names of covariates,
required for covariate models ("m1", "m3")}

\item{epochs}{(optional) data frame of exposure epoch labels and values}

\item{verbose}{(optional) TRUE or FALSE indicator for user output (default is
TRUE)}

\item{save.out}{(optional) TRUE or FALSE indicator to save output and intermediary output locally (default is TRUE)}
}
\value{
list of svyglm model output
}
\description{
Fits weighted marginal outcome model as a generalized linear model of the
user's choosing, relating exposure main effects to outcome using IPTW
weights.
}
\examples{
f <- createFormulas(exposure = "A",
                    exposure_time_pts = c(1, 2, 3),
                    outcome = "D.3",
                    tv_confounders = c("B.1", "B.2", "B.3"),
                    ti_confounders = "C",
                    type = "full",
                    save.out = FALSE)

test <- data.frame(ID = 1:50,
                   A.1 = rnorm(n = 50),
                   A.2 = rnorm(n = 50),
                   A.3 = rnorm(n = 50),
                   B.1 = rnorm(n = 50),
                   B.2 = rnorm(n = 50),
                   B.3 = rnorm(n = 50),
                   C = rnorm(n = 50),
                   D.3 = rnorm(n = 50))
test[, c("A.1", "A.2", "A.3")] <- lapply(test[, c("A.1", "A.2", "A.3")], as.numeric)

w <- createWeights(data = test,
                   exposure = "A",
                   outcome = "D.3",
                   tv_confounders = c("B.1", "B.2", "B.3"),
                   formulas = f,
                   save.out = FALSE)

m <- fitModel(data = test,
              weights = w,
              exposure = "A",
              exposure_time_pts = c(1, 2, 3),
              outcome = "D.3",
              tv_confounders = c("B.1", "B.2", "B.3"),
              model = "m0",
              save.out = FALSE)
m <- fitModel(data = test,
              weights = w,
              exposure = "A",
              exposure_time_pts = c(1, 2, 3),
              outcome = "D.3",
              tv_confounders = c("B.1", "B.2", "B.3"),
              model = "m0",
              family = gaussian,
              link = "identity",
              epochs = data.frame(epochs = c("Infancy", "Toddlerhood"),
                                  values = I(list(c(1, 2), c(3)))),
              save.out = FALSE)
m <- fitModel(data = test,
              weights = w,
              exposure = "A",
              exposure_time_pts = c(1, 2, 3),
              outcome = "D.3",
              tv_confounders = c("B.1", "B.2", "B.3"),
              model = "m1",
              covariates = "C",
              save.out = FALSE)
m <- fitModel(data = test,
              weights = w,
              exposure = "A",
              exposure_time_pts = c(1, 2, 3),
              outcome = "D.3",
              tv_confounders = c("B.1", "B.2", "B.3"),
              model = "m2",
              int_order = 3,
              save.out = FALSE)
m <- fitModel(data = test,
              weights = w,
              exposure = "A",
              exposure_time_pts = c(1, 2, 3),
              outcome = "D.3",
              tv_confounders = c("B.1", "B.2", "B.3"),
              model = "m3",
              int_order = 3,
              covariates = "C",
              save.out = FALSE)
}
\seealso{
{\code{\link[survey:svyglm]{survey::svyglm()}} for more on family/link specifications, <url1>}

{\code{\link[=createWeights]{createWeights()}}, <url1>}
}
