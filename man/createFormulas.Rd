% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createFormulas.R
\name{createFormulas}
\alias{createFormulas}
\alias{print.devMSM_formulas}
\title{Create balancing formulas}
\usage{
createFormulas(
  obj,
  type = c("full", "short", "update"),
  custom = NULL,
  keep_conf = NULL,
  bal_stats = NULL,
  verbose = FALSE,
  save.out = FALSE
)

\method{print}{devMSM_formulas}(x, ...)
}
\arguments{
\item{obj}{initialized MSM object from \code{\link[=initMSM]{initMSM()}}}

\item{type}{type of formula to create from 'full' (includes all lagged
time-varying confounders), 'short' (includes time-varying confounders at
t-1 lag only), or 'update' (adds to 'short' formulas any imbalanced
time-varying confounders at lags great than t-1)}

\item{custom}{(optional) custom list of formulas at each exposure time point
(default is to create automatically according to type)}

\item{keep_conf}{(optional) For 'short' formulas only, list of variable names reflecting
confounders that should be included always.}

\item{bal_stats}{list of balance statistics from \code{\link[=assessBalance]{assessBalance()}}}

\item{verbose}{(optional) TRUE or FALSE indicator for printing output to console.
default is FALSE.}

\item{save.out}{(optional) Either logical or a character string. If \code{TRUE},
it will output the result to a default file name within \code{home_dir} set in \code{initMSM()}. You can load the data with \code{x <- readRDS(file)}.
To use a non-default file name, specify a character string with the file name. It will save relative to \code{home_dir}.
There might be naming conflicts where two objects get saved to the same file. In these cases, users should specify a custom name.
default is FALSE.}

\item{x}{devMSM_formulas object from \code{\link[=createFormulas]{createFormulas()}}}

\item{...}{ignored}
}
\value{
a list containing balancing formulas. It is the length of the number of exposure variables.
}
\description{
Creates balancing formulas relating exposure to all relevant time-varying and
time invariant confounders at each exposure time point to be used to create
IPTW weights.
}
\examples{
library(devMSMs)
data <- data.frame(
  ID = 1:50,
  A.1 = rnorm(n = 50),
  A.2 = rnorm(n = 50),
  A.3 = rnorm(n = 50),
  B.1 = rnorm(n = 50),
  B.2 = rnorm(n = 50),
  B.3 = rnorm(n = 50),
  C = rnorm(n = 50),
  D.3 = rnorm(n = 50)
)
obj <- initMSM(
  data,
  exposure = c("A.1", "A.2", "A.3"),
  ti_conf = c("C"),
  tv_conf = c("B.1", "B.2", "B.3", "D.3")
)

# Full Formulas
f <- createFormulas(obj, type = "full")
print(f)

# Short Formulas
f <- createFormulas(obj, type = "short")
print(f)

# Update Formulas
w <- createWeights(data = data, formulas = f)
b <- assessBalance(data = data, weights = w)
f <- createFormulas(obj, type = "update", bal_stats = b)
print(f)

}
