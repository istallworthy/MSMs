% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assessBalance.R
\name{assessBalance}
\alias{assessBalance}
\title{Assesses confounder balancing}
\usage{
assessBalance(
  home_dir,
  data,
  exposure,
  exposure_time_pts,
  outcome,
  tv_confounders,
  type,
  formulas,
  weights = NULL,
  balance_thresh = 0.1,
  imp_conf = NULL,
  verbose = TRUE,
  save.out = TRUE
)
}
\arguments{
\item{home_dir}{(optional) path to home directory (required if save.out =
TRUE)}

\item{data}{data in wide format as: a data frame, list of imputed data
frames, or mids object}

\item{exposure}{name of exposure variable}

\item{exposure_time_pts}{list of integers at which weights will be
created/assessed that correspond to time points when exposure wass measured}

\item{outcome}{name of outcome variable with ".timepoint" suffix}

\item{tv_confounders}{list of time-varying confounders with ".timepoint"
suffix}

\item{type}{type of balance assessment 'prebalance' or 'weighted'}

\item{formulas}{list of balancing formulas at each time point output from
createFormulas()}

\item{weights}{list of IPTW weights output from createWeights, required for
type 'weighted'}

\item{balance_thresh}{(optional) one or two numbers between 0 and 1
indicating a single balancingn threshold or thresholds for more and less
important confounders, respectively (default = 0.1)}

\item{imp_conf}{(optional) list of variable names reflecting important
confounders, required if two balance thresholds are supplied}

\item{verbose}{(optiona) TRUE or FALSE indicator for user output (default is
TRUE)}

\item{save.out}{(optional) TRUE or FALSE indicator to save output and
intermediary output locally (default is TRUE)}
}
\value{
a list data frame of balance statistics
}
\description{
Draws on functions from the cobalt package to quantify the relations between
exposure and confounders at each exposure time point according to the
guidelines from Jackson, 2016 on how to assess balance for time-varying
exposures.
}
\examples{

test <- data.frame(ID = 1:50,
                   A.1 = rnorm(n = 50),
                   A.2 = rnorm(n = 50),
                   A.3 = rnorm(n = 50),
                   B.1 = rnorm(n = 50),
                   B.2 = rnorm(n = 50),
                   B.3 = rnorm(n = 50),
                   C = rnorm(n = 50),
                   D.3 = rnorm(n = 50))
test[, c("A.1", "A.2", "A.3")] <- lapply(test[, c("A.1", "A.2", "A.3")], as.numeric)

f <- createFormulas(exposure = "A",
                    exposure_time_pts = c(1, 2, 3),
                    outcome = "D.3",
                    tv_confounders = c("A.1", "A.2", "A.3", "B.1", "B.2", "B.3"),
                    ti_confounders = "C",
                    type = "short",
                    save.out = FALSE)

#Prebalance
b <- assessBalance(data = test,
                   exposure = "A",
                   exposure_time_pts = c(1, 2, 3),
                   outcome = "D.3",
                   tv_confounders = c("A.1", "A.2", "A.3", "B.1", "B.2", "B.3"),
                   type = "prebalance",
                   formulas = f,
                   save.out = FALSE)
b <- assessBalance(data = test,
                   exposure = "A",
                   exposure_time_pts = c(1, 2, 3),
                   outcome = "D.3",
                   tv_confounders = c("A.1", "A.2", "A.3", "B.1", "B.2", "B.3"),
                   type = "prebalance",
                   formulas = f,
                   balance_thresh = 0.2,
                   save.out = FALSE)
b <- assessBalance(data = test,
                   exposure = "A",
                   exposure_time_pts = c(1, 2, 3),
                   outcome = "D.3",
                   tv_confounders = c("A.1", "A.2", "A.3", "B.1", "B.2", "B.3"),
                   type = "prebalance",
                   formulas = f,
                   balance_thresh = c(0.1, 0.2),
                   imp_conf = "B.1",
                   save.out = FALSE)

# Weighted
w <- createWeights(data = test,
                   exposure = "A",
                   outcome = "D.3",
                   tv_confounders = c("A.1", "A.2", "A.3", "B.1", "B.2", "B.3"),
                   formulas = f,
                   save.out = FALSE)

b <- assessBalance(data = test,
                   exposure = "A",
                   exposure_time_pts = c(1, 2, 3),
                   outcome = "D.3",
                   tv_confounders = c("A.1", "A.2", "A.3", "B.1", "B.2", "B.3"),
                   type = "weighted",
                   weights = w,
                   formulas = f,
                   save.out = FALSE)
b <- assessBalance(data = test,
                   exposure = "A",
                   exposure_time_pts = c(1, 2, 3),
                   outcome = "D.3",
                   tv_confounders = c("A.1", "A.2", "A.3", "B.1", "B.2", "B.3"),
                   type = "weighted",
                   weights = w,
                   formulas = f,
                   balance_thresh = 0.2,
                   save.out = FALSE)
b <- assessBalance(data = test,
                   exposure = "A",
                   exposure_time_pts = c(1, 2, 3),
                   outcome = "D.3",
                   tv_confounders = c("A.1", "A.2", "A.3", "B.1", "B.2", "B.3"),
                   type = "weighted",
                   weights = w,
                   formulas = f,
                   balance_thresh = c(0.1, 0.2),
                   imp_conf = "B.1",
                   save.out = FALSE)
}
\seealso{
{\link{cobalt} package, <url1>}

{Jackson, 2016 for more on assessing balance for time-varying
exposures, <url1>}
}
